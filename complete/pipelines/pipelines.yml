template: true
valuesFilePath: values.yml

resources:
  - name: swampupShipaCodeRepo
    type: GitRepo
    configuration:
      path: {{ .Values.GitHub.path }}
      gitProvider: {{ .Values.GitHub.gitProvider }}
      branches:
        include: master
  - name: swampup_image
    type: Image
    configuration:
      registry: {{ .Values.Artifactory.intName }}
      sourceRepository: {{ .Values.Artifactory.devRepo }}
      imageName: {{ .Values.app.dockerImageName }}
      imageTag: ${run_number}
      autoPull: true
  - name: swampup_build_info
    type: Buildinfo
    configuration:
      sourceArtifactory: {{ .Values.Artifactory.intName }}
      buildName: {{ .Values.app.buildName }}
      buildNumber: ${run_number}
  - name: promoted_swampup_build_info
    type: Buildinfo
    configuration:
      sourceArtifactory: {{ .Values.Artifactory.intName }}
      buildName: {{ .Values.app.buildName }}
      buildNumber: ${run_number}

pipelines:
  - name: swampup_shipa_build_and_deploy
    steps:
      - name: app_docker_build
        type: DockerBuild
        configuration:
          affinityGroup: docker_build
          dockerFileLocation: {{ .Values.app.dockerFileLocation }}
          dockerFileName: {{ .Values.app.dockerFileName }}
          dockerImageName: {{ .Values.app.dockerImageName }}
          dockerImageTag: ${run_number}
          inputResources:
            - name: swampupShipaCodeRepo
          integrations:
            - name: {{ .Values.Artifactory.intName }}
        execution:
          onStart:
            - echo "Docker build started"
          onSuccess:
            - echo "Congrats - the Docker image was built!"
      - name: app_docker_push
        type: DockerPush
        configuration:
          affinityGroup: docker_build
          autoPublishBuildInfo: true
          forceXrayScan: true
          targetRepository: {{ .Values.Artifactory.devRepo }}
          integrations:
            - name:  {{ .Values.Artifactory.intName }}
          inputSteps:
            - name: app_docker_build
          outputResources:
            - name: swampup_image
            - name: swampup_build_info
      - name: publish_build_info
        type: PublishBuildInfo
        configuration:
          inputSteps:
            - name: app_docker_push
          outputResources:
            - name: swampup_build_info
      - name: app_promote
        type: PromoteBuild
        configuration:
          targetRepository:      {{ .Values.Artifactory.prodRepo }}
          includeDependencies:   true
          status:                Passed
          comment:               Artifact passed Xray Scan
          copy:                  true
          inputResources:
            - name: swampup_build_info
          outputResources:
            - name: promoted_app_build_info
      - name: shipa_deploy
        type: Bash
        configuration:
          integrations:
            - name: {{ .Values.Shipa.intName }}
            - name: {{ .Values.Artifactory.creds }}
          inputResources:
            - name: swampupShipaCodeRepo
          inputSteps:
            - name: app_promote
        execution:
          onExecute:
            - cd $res_swampupShipaCodeRepo_resourcePath
            - curl -s https://storage.googleapis.com/shipa-client/install-cloud-cli.sh | bash
            - shipa target add shipa target.shipa.cloud --set-current
            - echo $int_{{ .Values.Shipa.intName }}_email | shipa login $int_{{ .Values.Shipa.intName }}_password
            - shipa app deploy -a swampup -i {{ .Values.app.dockerImageName }} --port=8080

